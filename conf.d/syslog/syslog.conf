input {
  tcp {
    port => 5014
    type => syslog
  }
  udp {
    port => 5014
    type => syslog
  }
}
filter {
  if [syslog_program] == "ejbca" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
  }
  if [syslog_program] != "ejbca" {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
  }
  if [syslog_hostname] == "ubnt" and [syslog_program] == "kernel" {
    grok {
      match => [ "message", "%{IPTABLES}"]
    }
    mutate {
      copy => { "source_ip" => "source_fqdn" }
      copy => { "destination_ip" => "destination_fqdn" }
    }
    geoip {
      source => "source_ip"
    }
    dns {
      reverse => [ "source_fqdn" ]
      action => "replace"
    }
    dns {
      reverse => [ "destination_fqdn" ]
      action => "replace"
    }
    grok {
      match => [ "source_fqdn", "(?<source_domain>[a-z0-9_-]{0,62}\.[a-z0-9_-]{0,62}$)" ]
    }
    grok {
      match => [ "source_fqdn", "(?<source_subdomain>[a-z0-9_-]{0,62}\.[a-z0-9_-]{0,62}\.[a-z0-9_-]{0,62}$)" ]
    }
    grok {
      match => [ "destination_fqdn", "(?<destination_domain>[a-z0-9_-]{0,62}\.[a-z0-9_-]{0,62}$)" ]
    }
    grok {
      match => [ "destination_fqdn", "(?<destination_subdomain>[a-z0-9_-]{0,62}\.[a-z0-9_-]{0,62}\.[a-z0-9_-]{0,62}$)" ]
    }
  }
  if [syslog_program] == "haproxy" {
    grok {
      match => { "syslog_message" => "%{IP:source_ip}:%{POSINT:source_port} %{GREEDYDATA:syslog_message}" }
    }
    mutate {
      copy => { "source_ip" => "source_fqdn" }
    }
    geoip {
      source => "source_ip"
    }
    dns {
      reverse => [ "source_fqdn" ]
      action => "replace"
    }
  }
  date {
    match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
  }
  if [syslog_program] == "sudo" {
      drop {}
  }
  if [syslog_program] == "isymonitor" {
      drop {}
  }
  if [syslog_program] == "kibana" {
      drop {}
  }
  if [syslog_program] == "logstash" {
      drop {}
  }
}
output {
  elasticsearch {
    hosts => ["localhost:9200"]
    index => "syslog-%{+xxxx.ww}"
  }
}
